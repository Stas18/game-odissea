const questions = require('../data/questions.json');

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –ø–æ –µ—ë –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.
 * 
 * @param {number|string} pointId - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ—á–∫–∏ (–ª–æ–∫–∞—Ü–∏–∏), –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ.
 * @returns {string} - –û–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö questions.json. –ï—Å–ª–∏ —Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è".
 * 
 * @description
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –±–æ—Ç–∞.
 * –ü–æ–∏—Å–∫ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ –ø–æ–ª—é `pointId` –≤ –º–∞—Å—Å–∏–≤–µ –≤–æ–ø—Ä–æ—Å–æ–≤/–ª–æ–∫–∞—Ü–∏–π.
 */
function getPointDescription(pointId) {
  const point = questions.find(p => p.pointId === pointId);
  return point ? point.location : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è";
}


/**
 * –§–æ—Ä–º–∏—Ä—É–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É Telegram —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª–æ–∫–∞—Ü–∏–π.
 * 
 * @param {Array<number|string>} points - –ú–∞—Å—Å–∏–≤ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —Ç–æ—á–µ–∫ (–ª–æ–∫–∞—Ü–∏–π), –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫–∏.
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º `reply_markup`, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã Telegram.
 *                   –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –∏–º–µ–µ—Ç —Ç–µ–∫—Å—Ç –≤–∏–¥–∞ "üìç –õ–æ–∫–∞—Ü–∏—è {ID} - {–û–ø–∏—Å–∞–Ω–∏–µ}" –∏ callback_data –≤–∏–¥–∞ "point_{ID}".
 * 
 * @description
 * –ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç `getPointDescription` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏.
 */
function getKeyboard(points) {
  return {
    reply_markup: {
      inline_keyboard: points.map(point => [
        {
          text: `üìç –õ–æ–∫–∞—Ü–∏—è ${point} - ${getPointDescription(point)}`,
          callback_data: `point_${point}`
        }
      ])
    }
  };
}


/**
 * –§–æ—Ä–º–∏—Ä—É–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–æ—á–∫–µ —á–µ—Ä–µ–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ä—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã.
 * 
 * @param {number|string} pointId - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ—á–∫–∏, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
 * @returns {Object|null} - –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è Google Maps, –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç, 2GIS –∏ Telegram-–∫–∞—Ä—Ç—ã.
 *                          –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `null`, –µ—Å–ª–∏ —Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É –Ω–µ—ë –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
 * 
 * @description
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ª–æ–∫–∞—Ü–∏–∏, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –µ–º—É –ø–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
 * –ö–Ω–æ–ø–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ (lat, lng) –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ –∫–∞—Ä—Ç—ã –∏ callback –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—Ç—ã –≤–Ω—É—Ç—Ä–∏ Telegram.
 * –§–æ—Ä–º–∞—Ç—ã URL —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞.
 */
function getNavigationKeyboard(pointId) {
  const point = questions.find(p => p.pointId === pointId);
  if (!point || !point.coordinates) return null;

  return {
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: 'üó∫Ô∏è Google Maps',
            url: `https://maps.google.com/?q=${point.coordinates.lat},${point.coordinates.lng}`
          },
          {
            text: 'üìç –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã',
            url: `https://yandex.ru/maps/?pt=${point.coordinates.lng},${point.coordinates.lat}&z=17&l=map`
          }
        ],
        [
          {
            text: 'üì± 2GIS',
            url: `https://2gis.ru/geo/${point.coordinates.lng},${point.coordinates.lat}`
          },
          {
            text: 'üìç Telegram',
            callback_data: `show_map_${pointId}`
          }
        ]
      ]
    }
  };
}

module.exports = {
  getKeyboard,
  getPointDescription,
  getNavigationKeyboard
};
