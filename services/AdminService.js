const fs = require('fs');
const path = require('path');
const locales = require('../data/locales.json');

class AdminService {
  constructor() {
    this.admins = JSON.parse(process.env.ADMINS || '[1147849296,863909091]');
    this.gameStatusFile = path.join(__dirname, '../data/gameStatus.json');
    this.isGameActive = this.loadGameStatus();
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã –∏–∑ —Ñ–∞–π–ª–∞ gameStatus.json.
   * 
   * @returns {boolean} ‚Äî true, –µ—Å–ª–∏ –∏–≥—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞, –∏–Ω–∞—á–µ false. –ü—Ä–∏ –æ—à–∏–±–∫–µ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false.
   * 
   * @description
   * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞.
   * –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è ‚Äî –æ—à–∏–±–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ catch.
   */
  loadGameStatus() {
    try {
      const data = fs.readFileSync(this.gameStatusFile, 'utf-8');
      return JSON.parse(data).isGameActive || false;
    } catch (err) {
      return false;
    }
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ isGameActive –≤ —Ñ–∞–π–ª gameStatus.json.
   * 
   * @returns {undefined}
   * 
   * @description
   * –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ñ–∞–π–ª —Ü–µ–ª–∏–∫–æ–º.
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å (writeFileSync).
   * –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –∑–∞–ø–∏—Å–∏ ‚Äî –º–æ–∂–µ—Ç –≤—ã–±—Ä–æ—Å–∏—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ.
   */
  saveGameStatus() {
    fs.writeFileSync(this.gameStatusFile, JSON.stringify({
      isGameActive: this.isGameActive
    }));
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ —Ä–∞—Å—Å—ã–ª–∫–∏.
   * 
   * @param {boolean} status ‚Äî –∂–µ–ª–∞–µ–º—ã–π —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã (true ‚Äî –∞–∫—Ç–∏–≤–Ω–∞, false ‚Äî –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞).
   * @returns {string | { adminMessage: string, broadcastMessage: string }} ‚Äî
   *          –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è ‚Äî —Å—Ç—Ä–æ–∫–∞ –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
   *          –ò–Ω–∞—á–µ ‚Äî –æ–±—ä–µ–∫—Ç —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –∫–æ–º–∞–Ω–¥.
   * 
   * @description
   * –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
   * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∑—ã–≤–∞–µ—Ç saveGameStatus() –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞.
   * –°–æ–æ–±—â–µ–Ω–∏—è —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ (locales).
   */
  setGameActive(status) {
    if (this.isGameActive === status) {
      return status ? locales.gameAlreadyActive : locales.gameAlreadyInactive;
    }
    this.isGameActive = status;
    this.saveGameStatus();

    const message = status
      ? "üöÄ –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ú–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—é —Ç–æ—á–µ–∫!"
      : "üõë –ò–≥—Ä–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ù–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã!";

    return {
      adminMessage: status ? locales.gameStarted : "–ò–≥—Ä–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞",
      broadcastMessage: message
    };
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã.
   * 
   * @returns {boolean} ‚Äî —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ isGameActive.
   * 
   * @description
   * –ü—Ä–æ—Å—Ç–æ–π –≥–µ—Ç—Ç–µ—Ä, –Ω–µ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ.
   * –û—Ç—Ä–∞–∂–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –∏–∑–º–µ–Ω—ë–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ setGameActive.
   */
  getGameStatus() {
    return this.isGameActive;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
   * 
   * @param {string | number} userId ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   * @returns {boolean} ‚Äî true, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤, –∏–Ω–∞—á–µ false.
   * 
   * @description
   * –í–Ω—É—Ç—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç userId –∫ —á–∏—Å–ª—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.
   * –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∑–∞–¥–∞—ë—Ç—Å—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è ADMINS –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é [1111111111, 222222222].
   */
  isAdmin(userId) {
    return this.admins.includes(Number(userId));
  }

  /**
   * –†–∞—Å—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º, –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
   * 
   * @param {Object} bot ‚Äî —ç–∫–∑–µ–º–ø–ª—è—Ä Telegraf –±–æ—Ç–∞.
   * @param {string} message ‚Äî —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.
   * @param {Array<Object>} teams ‚Äî –º–∞—Å—Å–∏–≤ –∫–æ–º–∞–Ω–¥.
   * @returns {Promise<number>} ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
   * 
   * @description
   * –ò—Å–∫–ª—é—á–∞–µ—Ç –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏ –∫–æ–º–∞–Ω–¥—ã, —á–µ–π chatId —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç parse_mode: 'Markdown'.
   * –ü—Ä–∏ –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ ‚Äî –ª–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç —Ä–∞—Å—Å—ã–ª–∫—É.
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–µ—Ç.
   */
  async broadcastMessage(bot, message, teams) {
    let successCount = 0;
    const adminIds = this.admins.map(id => Number(id));

    // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã, –∏—Å–∫–ª—é—á–∞—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    const teamsToNotify = teams.filter(team =>
      !adminIds.includes(Number(team.chatId))
    );

    if (teamsToNotify.length === 0) {
      return 0;
    }

    for (const team of teamsToNotify) {
      try {
        await bot.telegram.sendMessage(
          team.chatId,
          `üì¢ *–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:*\n\n${message}`,
          { parse_mode: 'Markdown' }
        );
        successCount++;
      } catch (err) {
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥–µ ${team.teamName}:`, err.message);
      }
    }

    return successCount;
  }

  /**
   * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.
   * 
   * @param {Object} teamService ‚Äî —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –∫–æ–º–∞–Ω–¥ —Å –ø–æ–ª—è–º–∏ teams –∏ –º–µ—Ç–æ–¥–æ–º saveTeams().
   * @returns {Object} ‚Äî { message: string, affectedChatIds: number[] }
   *                   message ‚Äî –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ,
   *                   affectedChatIds ‚Äî –º–∞—Å—Å–∏–≤ chatId –∫–æ–º–∞–Ω–¥, —É –∫–æ—Ç–æ—Ä—ã—Ö –±—ã–ª —Å–±—Ä–æ—à–µ–Ω –ø—Ä–æ–≥—Ä–µ—Å—Å.
   * 
   * @description
   * –°–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã —Å –Ω–µ–Ω—É–ª–µ–≤—ã–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º (–±–∞–ª–ª—ã, –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —Ç–æ—á–∫–∏).
   * –ü–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ –≤—ã–∑—ã–≤–∞–µ—Ç teamService.saveTeams() –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.
   * –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ teamService.teams –Ω–∞–ø—Ä—è–º—É—é.
   */
  resetAllTeams(teamService) {
    const teamsWithProgress = teamService.teams.filter(
      team => team.points > 0 ||
        team.completedPoints.length > 0
    );
    const chatIds = teamsWithProgress.map(team => team.chatId);

    teamService.teams = [];
    teamService.saveTeams();

    return {
      message: locales.resetSuccess,
      affectedChatIds: chatIds
    };
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–≤–æ–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ –∏–≥—Ä–æ–∫–∞–º.
   * 
   * @param {Array<Object>} teams ‚Äî –º–∞—Å—Å–∏–≤ –∫–æ–º–∞–Ω–¥.
   * @param {boolean} [showAll=false] ‚Äî –µ—Å–ª–∏ true, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, –≤–∫–ª—é—á–∞—è –Ω–µ –Ω–∞—á–∞–≤—à–∏–µ –∏–≥—Ä—É.
   * @returns {string} ‚Äî –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–ø–æ–º –∫–æ–º–∞–Ω–¥ –∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π.
   * 
   * @description
   * –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –ø–æ –±–∞–ª–ª–∞–º ‚Üí –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–æ—á–µ–∫ ‚Üí –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞.
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ questions.json –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ—á–µ–∫.
   * –§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ –∏–≥—Ä–µ: "—á—á—á + –º–º–º" (–µ—Å–ª–∏ –±–æ–ª—å—à–µ —á–∞—Å–∞) –∏–ª–∏ —Ç–æ–ª—å–∫–æ "–º–º–º".
   * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ locales.
   */
  getTopTeams(teams, showAll = false) {
    const questions = require('../data/questions.json');
    const totalPoints = [...new Set(questions.map(q => q.pointId))].length;

    const sortedTeams = [...teams].sort((a, b) => {
      if (b.points !== a.points) return b.points - a.points;
      if (b.completedPoints.length !== a.completedPoints.length) {
        return b.completedPoints.length - a.completedPoints.length;
      }
      return new Date(a.startTime) - new Date(b.startTime);
    });

    if (sortedTeams.length === 0) {
      return locales.noTeamsRegistered;
    }

    const topTeams = sortedTeams
      .filter(team => showAll || team.completedPoints.length > 0)
      .map((team, index) => {
        const timeInGame = this.formatGameTime(team.startTime);
        const progress = team.completedPoints.length >= totalPoints ?
          locales.questCompleted :
          `${locales.pointsProgress.replace('%d', team.completedPoints.length).replace('%d', totalPoints)}`;

        let completionInfo = '';
        if (team.completionTime) {
          const completionDate = new Date(team.completionTime);
          completionInfo = ` | üèÅ –ó–∞–≤–µ—Ä—à–∏–ª: ${completionDate.toLocaleTimeString()}`;
        }

        return `*${index + 1}. ${team.teamName}* - ${team.points} ${locales.points}\n` +
          `   ${progress} | ‚è± ${timeInGame}${completionInfo}`;
      })
      .join('\n\n');

    return `${locales.topTeamsHeader}\n\n${topTeams || locales.noData}\n\n` +
      `${locales.totalStats.replace('%d', totalPoints).replace('%d', 0)}`;
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è, –ø—Ä–æ—à–µ–¥—à–µ–µ —Å –º–æ–º–µ–Ω—Ç–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∫–æ–º–∞–Ω–¥—ã.
   * 
   * @param {string | Date} startTime ‚Äî –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∫–æ–º–∞–Ω–¥—ã.
   * @returns {string} ‚Äî —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "2—á 15–º–∏–Ω" –∏–ª–∏ "45–º–∏–Ω").
   * 
   * @description
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ getTopTeams() –∏ getFullStats().
   * –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –µ–¥–∏–Ω–∏—Ü –≤—Ä–µ–º–µ–Ω–∏ –±–µ—Ä—ë—Ç—Å—è –∏–∑ locales.hours –∏ locales.minutes.
   */
  formatGameTime(startTime) {
    if (!startTime) return "–ù–µ –Ω–∞—á–∞–ª–∏";

    const start = new Date(startTime);
    const now = new Date();
    const duration = now - start;

    const hours = Math.floor(duration / 3600000);
    const minutes = Math.floor((duration % 3600000) / 60000);

    return `${hours}—á ${minutes}–º`;
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
   * 
   * @param {Array<Object>} teams ‚Äî –º–∞—Å—Å–∏–≤ –∫–æ–º–∞–Ω–¥.
   * @returns {string} ‚Äî –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥.
   * 
   * @description
   * –í–∫–ª—é—á–∞–µ—Ç: –∏–º—è –∫–æ–º–∞–Ω–¥—ã, ID —á–∞—Ç–∞, –∫–∞–ø–∏—Ç–∞–Ω–∞, —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –±–∞–ª–ª—ã, –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —Ç–æ—á–∫–∏, –≤—Ä–µ–º—è –≤ –∏–≥—Ä–µ, –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ (–µ—Å–ª–∏ –µ—Å—Ç—å) –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Markdown-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
   * –†–∞–∑–¥–µ–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã –≤–∏–∑—É–∞–ª—å–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ".
   */
  async getFullStats(teams) {
    const stats = teams.map(team => {
      const timeInGame = this.formatGameTime(team.startTime);
      let completionInfo = '';
      if (team.completionTime) {
        const completionDate = new Date(team.completionTime);
        completionInfo = `\nüèÅ –ó–∞–≤–µ—Ä—à–∏–ª: ${completionDate.toLocaleString()}`;
      }

      return `*${team.teamName}* (ID: ${team.chatId}):\n` +
        `${locales.captain}: ${team.captainId}\n` +
        `${locales.members}: ${team.members.join(', ') || locales.none}\n` +
        `${locales.points}: ${team.points}\n` +
        `${locales.completedPoints}: ${team.completedPoints.join(', ') || locales.none}\n` +
        `${locales.timeInGame}: ${timeInGame}\n` +
        `${locales.startTime}: ${new Date(team.startTime).toLocaleString()}` +
        completionInfo;
    }).join('\n\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n');

    return `${locales.fullStatsHeader.replace('%d', teams.length)}\n\n${stats || locales.noData}`;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∫–≤–µ—Å—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π.
   * 
   * @param {Object} team ‚Äî –æ–±—ä–µ–∫—Ç –∫–æ–º–∞–Ω–¥—ã, –∑–∞–≤–µ—Ä—à–∏–≤—à–µ–π –∫–≤–µ—Å—Ç.
   * @param {number} totalPoints ‚Äî –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –≤ –∫–≤–µ—Å—Ç–∞.
   * @returns {Promise<void>}
   * 
   * @description
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏.
   * –ü—Ä–∏ –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ ‚Äî –ª–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç —Ü–∏–∫–ª.
   * –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: Markdown.
   * ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç `bot`, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏!
   * –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å bot –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –ª—É—á—à–µ–π –º–æ–¥—É–ª—å–Ω–æ—Å—Ç–∏.
   */
  async notifyAdminAboutCompletion(team, totalPoints) {
    const admins = this.admins;
    const completionTime = this.formatGameTime(team.startTime);

    const message = `üèÅ *–ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞ –∫–≤–µ—Å—Ç!*\n\n` +
      `üèÜ –ö–æ–º–∞–Ω–¥–∞: ${team.teamName}\n` +
      `üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏: ${team.members.join(', ') || '–Ω–µ—Ç'}\n` +
      `üìä –ë–∞–ª–ª—ã: ${team.points}\n` +
      `üìç –¢–æ—á–µ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ: ${team.completedPoints.length}/${totalPoints}\n` +
      `‚è± –í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è: ${completionTime}\n` +
      `üïí –ó–∞–≤–µ—Ä—à–∏–ª–∞: ${new Date().toLocaleString()}`;

    for (const adminId of admins) {
      try {
        await bot.telegram.sendMessage(adminId, message, { parse_mode: 'Markdown' });
      } catch (err) {
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É ${adminId}:`, err);
      }
    }
  }

  /**
   * –†–∞—Å—Å—ã–ª–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º –æ —Ç–æ–º, —á—Ç–æ –≤—Å–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫–≤–µ—Å—Ç.
   * 
   * @param {Object} bot ‚Äî —ç–∫–∑–µ–º–ø–ª—è—Ä Telegraf –±–æ—Ç–∞.
   * @param {Array<Object>} teams ‚Äî –º–∞—Å—Å–∏–≤ –∫–æ–º–∞–Ω–¥.
   * @returns {Promise<void>}
   * 
   * @description
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º.
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Markdown.
   * –ü—Ä–∏ –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ ‚Äî –ª–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É, –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞—Å—Å—ã–ª–∫—É.
   */
  async notifyAllTeamsAboutGlobalCompletion(bot, teams) {
    const message = `üéâ *–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫–≤–µ—Å—Ç!*\n\n` +
      `üèÅ –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –≤—Å–µ —Ç–æ—á–∫–∏ –∫–∏–Ω–æ–∫–≤–µ—Å—Ç–∞.\n\n` +
      `–û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π!`;

    for (const team of teams) {
      try {
        await bot.telegram.sendMessage(
          team.chatId,
          message,
          { parse_mode: 'Markdown' }
        );
      } catch (err) {
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥–µ ${team.chatId}:`, err);
      }
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ª–∏ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ—á–µ–∫ –∫–≤–µ—Å—Ç–∞.
   * 
   * @param {Array<Object>} teams ‚Äî –º–∞—Å—Å–∏–≤ –∫–æ–º–∞–Ω–¥.
   * @param {number} totalPoints ‚Äî –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –≤ –∫–≤–µ—Å—Ç–µ.
   * @returns {boolean} ‚Äî true, –µ—Å–ª–∏ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—à–ª–∏ –≤—Å–µ —Ç–æ—á–∫–∏, –∏–Ω–∞—á–µ false.
   * 
   * @description
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —É –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã completedPoints.length >= totalPoints.
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ notifyAllTeamsAboutGlobalCompletion().
   */
  checkAllTeamsCompleted(teams, totalPoints) {
    return teams.every(team =>
      team.completedPoints && team.completedPoints.length >= totalPoints
    );
  }

  /**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ø-3 –ø—Ä–∏–∑–µ—Ä–æ–≤ –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.
 * 
 * @param {Array<Object>} teams ‚Äî –º–∞—Å—Å–∏–≤ –∫–æ–º–∞–Ω–¥.
 * @returns {string} ‚Äî –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–ø-3 –ø—Ä–∏–∑–µ—Ä–∞–º–∏.
 * 
 * @description
 * –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –ø–æ –±–∞–ª–ª–∞–º (–ø–æ —É–±—ã–≤–∞–Ω–∏—é) ‚Üí –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é) ‚Üí –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—Ç–∞—Ä—Ç–∞ (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é).
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–∏–≤—à–∏—Ö –∏ –≤—Ä–µ–º—è –≤ –∏–≥—Ä–µ –¥–ª—è –Ω–µ –∑–∞–≤–µ—Ä—à–∏–≤—à–∏—Ö.
 */
  calculateWinners(teams) {
    // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è –±—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É
    const activeTeams = teams.filter(team => team.startTime && (team.points > 0 || team.completedPoints.length > 0));

    if (activeTeams.length === 0) {
      return "üèÜ *–ü—Ä–∏–∑–µ—Ä—ã –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã*\n\n–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —Å –±–∞–ª–ª–∞–º–∏.";
    }

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º: –±–∞–ª–ª—ã ‚Üí –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è ‚Üí –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞
    const sortedTeams = [...activeTeams].sort((a, b) => {
      // –°–Ω–∞—á–∞–ª–∞ –ø–æ –±–∞–ª–ª–∞–º (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
      if (b.points !== a.points) {
        return b.points - a.points;
      }

      // –ï—Å–ª–∏ –±–∞–ª–ª—ã —Ä–∞–≤–Ω—ã, —Ç–æ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–∫—Ç–æ —Ä–∞–Ω—å—à–µ –∑–∞–≤–µ—Ä—à–∏–ª)
      if (a.completionTime && b.completionTime) {
        return new Date(a.completionTime) - new Date(b.completionTime);
      }

      // –ï—Å–ª–∏ –æ–¥–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞, –∞ –¥—Ä—É–≥–∞—è –Ω–µ—Ç - –∑–∞–≤–µ—Ä—à–∏–≤—à–∞—è –≤—ã—à–µ
      if (a.completionTime && !b.completionTime) {
        return -1;
      }
      if (!a.completionTime && b.completionTime) {
        return 1;
      }

      // –ï—Å–ª–∏ –æ–±–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏, —Ç–æ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—Ç–∞—Ä—Ç–∞ (–∫—Ç–æ —Ä–∞–Ω—å—à–µ –Ω–∞—á–∞–ª)
      return new Date(a.startTime) - new Date(b.startTime);
    });

    // –ë–µ—Ä–µ–º —Ç–æ–ø-3 –∫–æ–º–∞–Ω–¥—ã
    const top3 = sortedTeams.slice(0, 3);

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–∑–µ—Ä–∞–º–∏
    let message = "üèÜ *–¢–æ–ø-3 –ø—Ä–∏–∑–µ—Ä–∞:*\n\n";

    top3.forEach((team, index) => {
      const place = index + 1;
      const emoji = place === 1 ? "ü•á" : place === 2 ? "ü•à" : "ü•â";

      let timeInfo;
      if (team.completionTime) {
        // –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞ –∫–≤–µ—Å—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
        const start = new Date(team.startTime);
        const end = new Date(team.completionTime);
        const duration = end - start;
        const hours = Math.floor(duration / 3600000);
        const minutes = Math.floor((duration % 3600000) / 60000);
        timeInfo = `‚è± –í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è: ${hours}—á ${minutes}–º`;
      } else {
        // –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è –≤ –∏–≥—Ä–µ
        const start = new Date(team.startTime);
        const now = new Date();
        const duration = now - start;
        const hours = Math.floor(duration / 3600000);
        const minutes = Math.floor((duration % 3600000) / 60000);
        timeInfo = `‚è± –í –∏–≥—Ä–µ: ${hours}—á ${minutes}–º (–Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏)`;
      }

      message += `${emoji} *${place}. ${team.teamName}*\n`;
      message += `   üìä –ë–∞–ª–ª—ã: ${team.points}\n`;
      message += `   ${timeInfo}\n`;

      if (team.completedPoints.length > 0) {
        message += `   üìç –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–æ—á–µ–∫: ${team.completedPoints.length}\n`;
      }

      message += "\n";
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    message += `\n–í—Å–µ–≥–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–æ –∫–æ–º–∞–Ω–¥: ${activeTeams.length}`;

    return message;
  }
}

module.exports = AdminService;